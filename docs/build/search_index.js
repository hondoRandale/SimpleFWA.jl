var documenterSearchIndex = {"docs":
[{"location":"#SimpleFWA","page":"SimpleFWA","title":"SimpleFWA","text":"","category":"section"},{"location":"#Introduction","page":"SimpleFWA","title":"Introduction","text":"","category":"section"},{"location":"","page":"SimpleFWA","title":"SimpleFWA","text":"SimpleFWA is a practical Fire Works Algorithm implementation aiming at finding good meta parameters for learning problems. The algorithm is capable of finding the global optimum quite often, but not always. The Algorithm works on a bounded input, multi variant non-linear object function. The only parameter which has to be set is lambda.","category":"page"},{"location":"#Usage","page":"SimpleFWA","title":"Usage","text":"","category":"section"},{"location":"","page":"SimpleFWA","title":"SimpleFWA","text":"using SimpleFWA\nEasom(x;XPrimary,yPrimary) = -cos( x[1] ) * cos( x[2] ) *\n                             exp( -( (x[1]-π)^2 + (x[2]-π)^2 ) )\nlower    = [ -10.0f0, -10.0f0 ];\nupper    = [ 10.0f0, 10.0f0 ];\nXPrimary = Vector{ Matrix{Float32} }( undef, 1 );\nyPrimary = Vector{ Matrix{Float32} }( undef, 1 );\n\nsFWA( objFunction ) = simpleFWA( 16, 16;\n                                 λ_0         = 7.95f0,\n                                 ϵ_A         = 0.5f-2,\n                                 C_a         = 1.2f0,\n                                 C_r         = 0.8f0,\n                                 lower       = lower,\n                                 upper       = upper,\n                                 objFunction = objFunction,\n                                 XPrimary    = XPrimary,\n                                 yPrimary    = yPrimary,\n                                 maxiter     = 40 );\n\nsolutionFWA = sFWA( Easom );","category":"page"},{"location":"#Convention","page":"SimpleFWA","title":"Convention","text":"","category":"section"},{"location":"","page":"SimpleFWA","title":"SimpleFWA","text":"Each objective function has to adhere to the following parameter convention  f(x;XPrimary,yPrimary).  x denotes the meta param instance, XPrimary and yPrimary constitute the training set of the primary algorithm being tuned.","category":"page"},{"location":"#Reference","page":"SimpleFWA","title":"Reference","text":"","category":"section"},{"location":"","page":"SimpleFWA","title":"SimpleFWA","text":"simpleFWA( nFireworks::Int,\n           nSparks::Int;\n           λ_0::Float32,\n           ϵ_A::Float32,\n           C_a::Float32,\n           C_r::Float32,\n           lower::Vector{Float32},\n           upper::Vector{Float32},\n           objFunction::Function,\n           XPrimary::Vector{ Matrix{Float32} },\n           yPrimary::Vector{ Matrix{Float32} },\n           maxiter::Int,\n           ϵ_conv::Float32=1f-6 )\n\nminimize objFunction.\nnFireworks:  number of concurrent fireworks\nnSparks:     number of sparks per firework\nλ_0:         maximum amplitude of explosion\nϵ_A:         aux. var needed to prevent division by zero\nC_a:         explosion amplitude modification factor up\nC_r:         explosion amplitude modification factor down\nlower:       lower bound optimization\nupper:       upper bound optimization\nobjFunction: objective to be minimized\nXPrimary:    feature set primary algorithm\nyPrimary:    target  set primary algorithm\nmaxiter:     number of iterations to run","category":"page"},{"location":"#Result","page":"SimpleFWA","title":"Result","text":"","category":"section"},{"location":"","page":"SimpleFWA","title":"SimpleFWA","text":"the returned object contains the best parameter in field xb, the best function value is stored in field ymin.","category":"page"}]
}
